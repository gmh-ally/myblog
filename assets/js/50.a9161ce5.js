(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{471:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"前端缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端缓存"}},[t._v("#")]),t._v(" 前端缓存")]),t._v(" "),s("h2",{attrs:{id:"前端缓存-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端缓存-2"}},[t._v("#")]),t._v(" 前端缓存")]),t._v(" "),s("ol",[s("li",[t._v("前端缓存")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("web缓存主要指的是两部分：浏览器缓存和http缓存。")])]),t._v(" "),s("li",[s("p",[t._v("浏览器缓存：比如,localStorage,sessionStorage,cookie等等。这些功能主要用于缓存一些必要的数据，比如用户信息。比如需要携带到后端的参数。亦或者是一些列表数据等等。")])]),t._v(" "),s("li",[s("p",[t._v("但是 像localStorage，sessionStorage这种用户缓存数据的功能，他只能保存5M左右的数据。cookie则更少，大概只能有4kb的数据。")])])]),t._v(" "),s("h4",{attrs:{id:"其中http缓存是web缓存的核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其中http缓存是web缓存的核心"}},[t._v("#")]),t._v(" 其中http缓存是web缓存的核心")]),t._v(" "),s("p",[t._v("如果本地有缓存，则直接从本地存储，无须再从服务器读取。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("缓存可以解决什么问题？")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("减少不必要的网络传输，节约宽带（就是省钱）")])]),t._v(" "),s("li",[s("p",[t._v("更快的加载页面（就是加速）")])]),t._v(" "),s("li",[s("p",[t._v("减少服务器负载，避免服务器过载的情况出现。（就是减载）\n但也有缺点")])]),t._v(" "),s("li",[s("p",[t._v('占内存（有些缓存会被存到内存中）\n日常的开发中，我们最关心的，还是"更快的加载页面"; 尤其是对于react/vue等SPA（单页面）应用来说，首屏加载是老生常谈的问题。这个时候，缓存就显得非常重要。不需要往后端请求，直接在缓存中读取。速度上，会有显著的提升。是一种提升网站性能与用户体验的有效策略')])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("http缓存包含哪几种？\nhttp缓存又分为强制缓存和协商缓存两种缓存,我们来深度剖析一下强制缓存和协商缓存各自的优劣以及他们的使用场景以及使用原理")])]),t._v(" "),s("li",[s("p",[t._v("强制缓存")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("强制缓存，我们简称强缓存。")])]),t._v(" "),s("li",[s("p",[t._v("基于Expires字段实现的强缓存 但Expires过度依赖本地时间，如果本地与服务器时间不同步，就会出现资源无法被缓存或者资源永远被缓存的情况。所以，强缓存功能通常使用cache-control字段来代替Expires字段。")])]),t._v(" "),s("li",[s("p",[t._v("基于Cache-control实现的强缓存")])])]),t._v(" "),s("p",[t._v("Cache-control这个字段在http1.1中被增加，Cache-control完美解决了Expires本地时间和服务器时间不同步的问题。是当下的项目中实现强缓存的最常规方法。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//往响应头中写入需要缓存的时间")]),t._v("\nres"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'Cache-Control'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'max-age=10'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Cache-Control:max-age=N，N就是需要缓存的秒数。从第一次请求资源的时候开始，往后N秒内，资源若再次请求，则直接从磁盘（或内存中读取），不与服务器做任何交互。")]),t._v(" "),s("ul",[s("li",[t._v("max-age决定客户端资源被缓存多久。")]),t._v(" "),s("li",[t._v("no-cache表示是强制进行协商缓存。")]),t._v(" "),s("li",[t._v("no-store是表示禁止任何缓存策略。")]),t._v(" "),s("li",[t._v("public表示资源即可以被浏览器缓存也可以被代理服务器缓存。")]),t._v(" "),s("li",[t._v("private表示资源只能被浏览器缓存。")])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("协商缓存")])]),t._v(" "),s("h2",{attrs:{id:"基于lastmodified的协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于lastmodified的协商缓存"}},[t._v("#")]),t._v(" 基于LastModified的协商缓存")]),t._v(" "),s("p",[t._v("基于last-modified的协商缓存实现方式是:")]),t._v(" "),s("ol",[s("li",[t._v("首先需要在服务器端读出文件修改时间，")]),t._v(" "),s("li",[t._v("将读出来的修改时间赋给响应头的last-modified字段。")]),t._v(" "),s("li",[t._v("最后设置Cache-control:no-cache")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mtime "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("statSync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./bg.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取修改时间")]),t._v("\n\nres"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'last-modified'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mtime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUTCString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置文件最后修改时间")]),t._v("\nres"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cache-Control'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no-cache'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Cache-control:no-cache的意思是跳过强缓存校验，直接进行协商缓存。")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);